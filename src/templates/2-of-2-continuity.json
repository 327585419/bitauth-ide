{
  "description": "A 2-of-2 wallet, which after a specified delay, can be recovered by either of the original two keys and a signature from a trusted user (e.g. an attorney).\nThis scheme is described in more detail in BIP-65.",
  "name": "2-of-2 with Business Continuity",
  "entities": {
    "signer_1": {
      "name": "Signer 1",
      "description": "One of the two co-owners of this wallet. If Signer 1 is unable to sign, Signer 2 and Trusted Party can recover funds after 30 days.",
      "scripts": ["lock", "spend", "recover_1", "recover_2"],
      "variables": {
        "first": {
          "type": "Key",
          "mock": "1111111111111111111111111111111111111111111111111111111111111111",
          "name": "Signer 1's HDKey",
          "description": ""
        },
        "block_time": {
          "type": "CurrentBlockTime",
          "description": "",
          "mock": "",
          "name": ""
        },
        "delay_seconds": {
          "description": "The waiting period (from the time the wallet is created) after which the Trusted Party can assist with delayed recoveries. The delay is measured in seconds, e.g. 1 day is 86400. Here we set the delay to 30 days (2592000).",
          "name": "Recovery Delay (Seconds)",
          "type": "WalletData",
          "mock": "2592000"
        }
      }
    },
    "signer_2": {
      "name": "Signer 2",
      "description": "One of the two co-owners of this wallet. If Signer 2 is unable to sign, Signer 1 and Trusted Party can recover funds after 30 days.",
      "scripts": ["lock", "spend", "recover_1", "recover_2"],
      "variables": {
        "second": {
          "type": "Key",
          "mock": "1111111111111111111111111111111111111111111111111111111111111112",
          "name": "Signer 2's HDKey",
          "description": ""
        }
      }
    },
    "trusted_party": {
      "name": "Trusted Party",
      "description": "A trusted party, like a lawyer or trusted employee. If either Signer is unable to sign, after 30 days, Trusted Party can help to recover funds by co-signing on that Signer's behalf.",
      "scripts": ["lock", "spend", "recover_1", "recover_2"],
      "variables": {
        "trusted": {
          "type": "Key",
          "mock": "1111111111111111111111111111111111111111111111111111111111111113",
          "name": "Trusted Party's HDKey",
          "description": ""
        }
      }
    }
  },
  "scripts": {
    "lock": {
      "name": "2-of-2 Vault",
      "script": "OP_HASH160 <$(<lock.redeem_script> OP_HASH160)> OP_EQUAL"
    },
    "lock.redeem_script": {
      "name": "2-of-2 Vault Redeem Script",
      "script": "OP_IF\n  <$(\n    <block_time> <delay_seconds>\n    OP_ADD\n  )>\n  OP_CHECKLOCKTIMEVERIFY OP_DROP\n  <trusted.public_key>\n  OP_CHECKSIGVERIFY\n  <1>\nOP_ELSE\n  <2>\nOP_ENDIF\n<first.public_key> <second.public_key> <2>\nOP_CHECKMULTISIG"
    },
    "recover_1": {
      "name": "Recover – Signer 1",
      "script": "<0>\n<first.signature.all_outputs>\n<trusted.signature.all_outputs>\n<1> <lock.redeem_script>",
      "unlocks": "lock"
    },
    "recover_2": {
      "name": "Recover – Signer 2",
      "script": "<0>\n<second.signature.all_outputs>\n<trusted.signature.all_outputs>\n<1> <lock.redeem_script>",
      "unlocks": "lock"
    },
    "spend": {
      "name": "Standard Spend",
      "script": "<0>\n<first.signature.all_outputs>\n<second.signature.all_outputs>\n<0> <lock.redeem_script>",
      "unlocks": "lock"
    }
  },
  "supported": ["BCH_2019_05", "BCH_2019_11", "BSV_2018_11", "BTC_2017_08"],
  "version": 0
}
